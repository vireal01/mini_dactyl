#include <dt-bindings/zmk/matrix_transform.h>
#include "vireal_dactyl-layouts.dtsi"
#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10
#include <dt-bindings/zmk/pointing.h>


/ {
    chosen {
        zmk,physical-layout = &vireal_physical_layout;
        zephyr,display = &oled;  // Add reference to display
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <4>;
        map = <
        //  LKey 1 |LKey 2 |LKey 3 |LKey 4 |LKey 5          RKey 1 |RKey 2 |RKey 3 |RKey 4 |RKey 5 
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)         RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
        //  LKey 7 |LKey 8 |LKey 9 |LKey 10 |LKey 11      RKey 6 |RKey 7 |RKey 8 |RKey 9 |RKey 10 
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)       RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
        //  LKey 13 |LKey 14 |LKey 15 |LKey 16 |LKey 18    RKey 11 |RKey 12 |RKey 13 |RKey 14 |RKey 15 
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)        RC(2,5)  RC(2,6) RC(2,7) RC(2,8) RC(2,9)
        //                 LKey 19 |LKey 20 |LKey 21       RKey 16 |RKey 17 |RKey 18
                        RC(3,2) RC(3,3) RC(3,4)         RC(3,5) RC(3,6) RC(3,7)
        >;
    };

    kscan0: kscan0 {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        wakeup-source;

        row-gpios
            = <&pro_micro 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	        , <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	        , <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };
};

// For Pro Micro, we'll use the Arduino pins
&pinctrl {
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 20)>,
                   <NRF_PSEL(TWIM_SCL, 0, 22)>;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 20)>,
                   <NRF_PSEL(TWIM_SCL, 0, 22)>;
            low-power-enable;
        };
    };
};

&i2c0 {
    compatible = "nordic,nrf-twi";
    status = "okay";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
    clock-frequency = <I2C_BITRATE_STANDARD>;

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };

    // Add this diagnostic scanner
    i2c_scanner: i2c_scanner@76 {
        compatible = "vnd,i2c-scanner";
        reg = <0x76>;
        status = "okay";
    };
};
